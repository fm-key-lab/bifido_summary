import os

from snakemake.utils import min_version

min_version('8.11')


configfile: os.environ["GROUP_HOME"] + '/config/public_data.json'
configfile: 'config/my_data.json'
configfile: 'config/params.json'


module widevariant:
    snakefile: github('fm-key-lab/widevariant_module', path='workflow/Snakefile', tag='0.0.3-alpha')
    config: config


include: 'rules/samplesheet.smk'
include: 'rules/abundance.smk'
include: 'rules/mapping.smk'
include: 'rules/variants.smk'
include: 'rules/phylogeny.smk'
include: 'rules/prepare_results.smk'


wildcard_constraints:
    sample=r'\d+',
    donors=config['wildcards']['donors'],
    relationships=config['wildcards']['relationships'],
    species=config['wildcards']['species'],


# TODO: Exclude index swapping-affected samples
INDEX_SWAPPED = [
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    11,
    12,
    13,
    14,
    15,
    16,
    17,
    18,
    19,
    20,
    21,
    22,
    23,
    24,
    25,
    56,
    57,
    58,
    59,
    60,
    61,
    62,
    63,
    64,
    65,
    66,
    67,
    68,
    69,
    70,
    141,
    142,
    143,
    144,
    145,
    146,
    147,
    148,
    149,
    150,
    151,
    160,
    161,
    254,
    290,
    291,
    292,
    293,
    334,
    335,
    336,
    337,
    338,
    349,
    350,
    351,
    352,
    374,
    375,
    376,
    377,
    378,
    379,
    380,
    381,
    382,
    383,
    384,
    385,
    386,
    387,
    388,
    389,
    390
]

EXCLUDE = [313, 324] # TODO

DBS = [
    'samplesheet',
    'abundance',
    'candidate_variants',
    # 'all_variants',
    'total_reads',
]


rule all:
    input:
        # 'results/phylogenies.done',
        expand('results/{db}.duckdb', db=DBS)
    localrule: True
    default_target: True


onstart:
    shell('find logs -type f ! -path "logs/notebooks/*" -delete')
    shell('rm -f .nextflow.log*')


onsuccess:
    shell(f'mkdir -p "/r/t/thosi/{config['run_id']}"')
    shell(f'rsync -au --progress config "/r/t/thosi/{config['run_id']}/"')

    # Clean up compiled report
    shell(f'rm -f "report/main.{config['run_id']}.$(date +"%Y%m%d").pdf"')
    shell(f'touch report/main.pdf')
    shell(f'mv report/main.pdf "report/main.{config['run_id']}.$(date +"%Y%m%d").pdf"')
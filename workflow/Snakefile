import os

from snakemake.utils import min_version

min_version('8.11')


configfile: os.environ["GROUP_HOME"] + '/config/public_data.json'
configfile: 'config/my_data.json'
configfile: 'config/params.json'


module widevariant:
    snakefile: github('fm-key-lab/widevariant_module', path='workflow/Snakefile', tag='0.0.3-alpha')
    config: config


include: 'rules/samplesheet.smk'
include: 'rules/abundance.smk'
include: 'rules/mapping.smk'
include: 'rules/variants.smk'
include: 'rules/phylogeny.smk'
include: 'rules/prepare_results.smk'


wildcard_constraints:
    sample=r'\d+',
    donors=config['wildcards']['donors'],
    relationships=config['wildcards']['relationships'],
    species=config['wildcards']['species'],


EXCLUDE = [313, 324] # TODO

DBS = [
    'samplesheet',
    'abundance',
    'candidate_variants',
    # 'all_variants',
    'total_reads',
]


rule all:
    input:
        expand('results/{db}.duckdb', db=DBS)
    localrule: True
    default_target: True


onstart:
    shell('find logs -type f ! -path "logs/notebooks/*" -delete')
    shell('rm -f .nextflow.log*')


onsuccess:
    shell(f'mkdir -p "/r/t/thosi/{config['run_id']}"')
    shell(f'rsync -au --progress config "/r/t/thosi/{config['run_id']}/"')

    # Clean up compiled report
    shell(f'rm -f "report/main.{config['run_id']}.$(date +"%Y%m%d").pdf"')
    shell(f'touch report/main.pdf')
    shell(f'mv report/main.pdf "report/main.{config['run_id']}.$(date +"%Y%m%d").pdf"')